
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@OpportunityComponents/ui/card';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@OpportunityComponents/ui/table';
import { Badge } from '@OpportunityComponents/ui/badge';
import UserAvatar from '@OpportunityComponents/table/UserAvatar';
import MetricTooltip from '../MetricTooltip';
import { Users, Filter, Target, DollarSign } from 'lucide-react';

const SalesPerformanceTables = ({ repPerformanceData = [], filteredOpportunities = [] }) => {
  return (
    <>
      <Card>
        <CardHeader className="bg-gray-50">
          <CardTitle className="text-ocean-800 flex items-center gap-2">
            <Users className="h-5 w-5 text-purple-600" />
            Sales Rep Performance
          </CardTitle>
        </CardHeader>
        <CardContent>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Sales Representative"
                    description="Individual sales team members assigned to opportunities. Avatar colors are consistently generated based on the rep's name."
                  >
                    <div className="flex items-center gap-2">
                      <Users className="h-4 w-4 text-purple-500" />
                      Sales Rep
                    </div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Total Deals"
                    description="Total number of opportunities assigned to this sales representative, including both won and lost deals."
                    calculation="Count of all opportunities assigned to the rep"
                  >
                    <div>Total Deals</div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Won Deals"
                    description="Number of successfully closed deals. This represents actual business won by the sales representative."
                    calculation="Count of opportunities with 'Won' status"
                  >
                    <div>Won Deals</div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Win Rate"
                    description="Percentage of deals won out of total closed deals. Higher rates indicate more effective sales performance."
                    calculation="(Won Deals รท Total Closed Deals) ร 100"
                    benchmarks={{
                      good: "> 50% win rate",
                      average: "25-50% win rate",
                      concerning: "< 25% win rate"
                    }}
                  >
                    <div className="flex items-center gap-2">
                      <Target className="h-4 w-4 text-blue-500" />
                      Win Rate
                    </div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Revenue Generated"
                    description="Total revenue generated by this sales representative from all won deals in the selected period."
                    calculation="Sum of all won deal amounts for this rep"
                  >
                    <div className="flex items-center gap-2">
                      <DollarSign className="h-4 w-4 text-emerald-600" />
                      Revenue
                    </div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Average Deal Size"
                    description="Average value of won deals for this sales representative. Indicates the typical deal size they close."
                    calculation="Total Revenue รท Number of Won Deals"
                  >
                    <div>Avg Deal Size</div>
                  </MetricTooltip>
                </TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {repPerformanceData.map((rep) => (
                <TableRow key={rep.name} className="hover:bg-gray-50 py-2.5">
                  <TableCell className="font-medium flex items-center gap-2 py-2.5">
                    <UserAvatar name={rep.name} />
                    <span className="text-black">{rep.name}</span>
                  </TableCell>
                  <TableCell className="py-2.5">{rep.total}</TableCell>
                  <TableCell className="text-green-600 font-medium py-2.5">{rep.won}</TableCell>
                  <TableCell className="py-2.5">
                    <Badge variant={parseFloat(rep.winRate) > 50 ? "green" : "red"}>
                      {rep.winRate}%
                    </Badge>
                  </TableCell>
                  <TableCell className="text-green-600 font-medium py-2.5">
                    ${rep.revenue >= 1000000 ? (rep.revenue / 1000000).toFixed(2) + 'M' : (rep.revenue / 1000).toFixed(0) + 'K'}
                  </TableCell>
                  <TableCell className="text-purple-600 font-medium py-2.5">
                    ${rep.avgDealSize >= 1000000 ? (rep.avgDealSize / 1000000).toFixed(2) + 'M' : (rep.avgDealSize / 1000).toFixed(0) + 'K'}
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>

      <Card>
        <CardHeader className="bg-gray-50">
          <CardTitle className="text-ocean-800 flex items-center gap-2">
            <Filter className="h-5 w-5 text-gray-500" />
            Opportunity Details
          </CardTitle>
        </CardHeader>
        <CardContent>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Opportunity Information"
                    description="Name of the sales opportunity and the company it's associated with."
                  >
                    <div>Opportunity</div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Company"
                    description="The organization or business entity associated with this sales opportunity."
                  >
                    <div>Company</div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Assigned Sales Representative"
                    description="The sales team member responsible for managing and closing this opportunity."
                  >
                    <div className="flex items-center gap-2">
                      <Users className="h-4 w-4 text-purple-500" />
                      Assigned Rep
                    </div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Deal Status"
                    description="Current status of the opportunity. Green indicates won deals, blue for open opportunities, red for lost deals."
                  >
                    <div>Status</div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Sales Stage"
                    description="Current stage in the sales process. Indicates how far along the opportunity is in your sales pipeline."
                  >
                    <div>Stage</div>
                  </MetricTooltip>
                </TableHead>
                <TableHead className="bg-gray-50 text-muted-foreground h-11">
                  <MetricTooltip
                    title="Opportunity Value"
                    description="The monetary value of this opportunity. For won deals, this represents actual revenue. For open deals, this is potential revenue."
                    calculation="Deal amount in thousands (K) or millions (M)"
                  >
                    <div className="flex items-center gap-2">
                      <DollarSign className="h-4 w-4 text-emerald-600" />
                      Amount
                    </div>
                  </MetricTooltip>
                </TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {filteredOpportunities.slice(0, 10).map((opp) => (
                <TableRow key={opp.id || opp.ID} className="hover:bg-gray-50">
                  <TableCell className="font-medium text-black py-2.5">
                    {opp.name || opp.OppName || opp.Name || 'Unnamed Opportunity'}
                  </TableCell>
                  <TableCell className="py-2.5">
                    {opp.company || opp.CustomerName || opp.Customer || 'Unknown Company'}
                  </TableCell>
                  <TableCell className="flex items-center gap-2 py-2.5">
                    <UserAvatar name={opp.assignedRep || opp.AssignedTo || 'Unassigned'} />
                    {opp.assignedRep || opp.AssignedTo || 'Unassigned'}
                  </TableCell>
                  <TableCell className="py-2.5">
                    <Badge variant={
                      (opp.status === 'Won' || opp.Status === 'Won' || opp.status === 'Closed Won' || opp.Status === 'Closed Won') ? "green" : 
                      (opp.status === 'Open' || opp.Status === 'Open') ? "blue" : "red"
                    }>
                      {opp.status || opp.Status || 'Unknown'}
                    </Badge>
                  </TableCell>
                  <TableCell className="py-2.5">{opp.stage || opp.Stage || 'Unknown'}</TableCell>
                  <TableCell className="text-green-600 font-medium py-2.5">
                    ${((opp.amount || opp.Amount || opp.Total || 0) / 1000).toFixed(0)}K
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>
    </>
  );
};

export default SalesPerformanceTables;
